[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "setuptools-scm"]

[project]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
  "dash == 2.9.3",
  "pymongo == 4.3.3",
  "pandas == 2.0.0",
  "polars == 0.17.4",
  "pymongo == 4.3.3",
  "mongoengine == 0.27.0",
  "python-dotenv == 0.21.1",
  "blinker == 1.6.2",
  "dash-bootstrap-components == 1.4.1",
  "jsonpickle == 3.0.1",
]
name = "pum13-2023"
description = "Data visualization dashboard written with Dash"
readme = "README.md"
requires-python = ">=3.10"
version = "0.0.1"

[project.optional-dependencies]
dev = [
  "isort == 5.12.0",
  "black == 23.3.0",
  "mypy == 1.2.0",
  "nox == 2022.11.21",
  "pytest == 7.3.1",
  "flake8 == 6.0.0",
  "flake8-bugbear == 23.3.23",
  "flake8-comprehensions == 3.12.0",
  "flake8-docstrings",
  "pep8-naming == 0.13.3",
  "pyproject-flake8 == 6.0.0.post1",
  "pytest-cov == 4.0.0",
  "selenium == 4.8.3",
  "pytest-dependency == 0.5.1",
  "mongomock == 4.1.2",
]

prod = [
  "gunicorn == 20.1.0",
]

[tool.mypy]
disable_error_code = "misc"
mypy_path = "src/dashboard/"
exclude = "migrations"
strict = true


[[tool.mypy.overrides]]
module = ["dash.*", "plotly.*", "dash_bootstrap_components.*", "jsonpickle.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mongoengine.*"
ignore_missing_imports = true

[tool.flake8]
per-file-ignores = "__init__.py: F401,D104"
exclude = [".venv", "venv", ".nox", "docs", ".git", ".github", "noxfile.py", ".build"]
extend-immutable-calls = ["Argument"]
max-doc-length = 72
max-line-length = 99
docstring-convention = "google"

[tool.black]
line-length = 99
target-version = ["py310"]

[tool.isort]
force_sort_within_sections = true
line_length = 99
profile = "black"
skip_gitignore = true
src_paths = ["src"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-m 'not test_create_dashboard'"
markers = [
    "test_login: This are test that will test the login capabilities of the website.",
    "test_unsuccessful_login: A test that would try to login with invalid username and password.",
    "test_successful_login: A test that would try to login to the system.",
    "test_logout: A test that would try to log out from the system.",
    "test_create_dashboard: A group of test that will test the functionality of creating the dashboard.",
    "test_home_page: A test that checks that the home page is displayed",
    "test_creating_home_page: A test that would try to create the dashboard from the create dashboard button in the home screen.",
    "test_creating_dashboard_page: A test that would try to create a dashboard from the dashboard page.",
    "test_navbar_component: A test that test navbar component.",
    "test_data_db: Test db models for that measurement data part of the db",
    "test_user_db: Test user db models",
    "test_utilities: A test that test utility functions.",
    "test_modal: A test that test modals.",
    "test_dashboards_page: Tests for the dashboards page.",
    "test_dashboards_list_component: Tests for the dashboards list component.",
    "test_list_component: Tests for the list component.",
    "dependency",
]

[tool.coverage.report]
omit=["tests/*", "/opt/*"]
